!function(){const stageElem=document.querySelector(".stage"),houseElem=document.querySelector(".house"),barElem=document.querySelector(".progress-bar"),selectCharacterElem=document.querySelector(".select-character"),mousePos={x:0,y:0};let maxScrollValue;function resizeHandler(){maxScrollValue=document.body.offsetHeight-window.innerHeight}window.addEventListener("scroll",function(){const scrollPer=pageYOffset/maxScrollValue,zMove=2080*scrollPer-900;houseElem.style.transform="translateZ("+zMove+"vw)",barElem.style.width=100*scrollPer+"%"}),window.addEventListener("mousemove",function(e){mousePos.x=e.clientX/window.innerWidth*2-1,mousePos.y=1-e.clientY/window.innerHeight*2,stageElem.style.transform="rotateX("+5*mousePos.y+"deg) rotateY("+45*mousePos.x+"deg)"}),window.addEventListener("resize",resizeHandler),stageElem.addEventListener("click",function(e){new Character({xPos:e.clientX/window.innerWidth*100,speed:.5*Math.random()+.2})}),selectCharacterElem.addEventListener("click",function(e){const value=e.target.getAttribute("data-char");document.body.setAttribute("data-char",value)});let images=[...document.querySelectorAll(".lazy")];const interactSettings={root:document.querySelector(".house"),rootMargin:"0px 0px 200px 0px"};function onIntersection(imageEntites){imageEntites.forEach(image=>{image.isIntersecting&&(observer.unobserve(image.target),image.target.src=image.target.dataset.src,image.target.onload=()=>image.target.classList.add("loaded"))})}let observer=new IntersectionObserver(onIntersection,interactSettings);images.forEach(image=>observer.observe(image)),resizeHandler()}();